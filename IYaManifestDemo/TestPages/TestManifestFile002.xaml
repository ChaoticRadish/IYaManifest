<Page x:Class="IYaManifestDemo.TestPages.TestManifestFile002"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:IYaManifestDemo.TestPages"
      xmlns:converter="clr-namespace:Common_Wpf.Converter;assembly=Common_Wpf"
      xmlns:coreV1="clr-namespace:IYaManifest.Core.V1;assembly=IYaManifest"
      xmlns:coreBase="clr-namespace:IYaManifest.Core.Base;assembly=IYaManifest"
      xmlns:assets="clr-namespace:IYaManifestDemo.Assets"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="TestManifestFile002"
      d:DataContext="{d:DesignInstance local:TestViewModel_ManifestFile002}">

    <Page.Resources>
        <converter:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <converter:GetTypeConverter x:Key="getTypeConverter"/>
        <converter:IsNullConverter x:Key="isNullConverter"/>

        
        <DataTemplate x:Key="ManifestItemsTemplate" DataType="{x:Type coreV1:ManifestItem}">
            <StackPanel Orientation="Vertical">
                <Separator/>
                <Label Content="{Binding AssetId}"></Label>
                <Label Content="{Binding AssetType}"></Label>
                <Label Content="{Binding AssetReference, Converter={StaticResource isNullConverter}}"></Label>
                <Label Content="{Binding AssetReference, Converter={StaticResource getTypeConverter}}"></Label>
                <ContentControl DataContext="{Binding AssetReference}">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Converter={StaticResource getTypeConverter}}" Value="{x:Type assets:TestTextAsset1}">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type assets:TestTextAsset1}">
                                                <StackPanel Orientation="Horizontal" DataContext="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}}"
                                                    d:DataContext="{d:DesignInstance assets:TestTextAsset1}">
                                                    <Label>文本 (TestTextAsset1):</Label>
                                                    <Label Content="{Binding Data}"></Label>
                                                </StackPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Converter={StaticResource getTypeConverter}}" Value="{x:Type assets:TestTextAsset2}">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type assets:TestTextAsset2}">
                                                <StackPanel Orientation="Horizontal" DataContext="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}}"
                                                    d:DataContext="{d:DesignInstance assets:TestTextAsset2}">
                                                    <Label>文本 (TestTextAsset2):</Label>
                                                    <Label Content="{Binding Data}"></Label>
                                                </StackPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Converter={StaticResource getTypeConverter}}" Value="{x:Type assets:TestTextAsset2}">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type assets:TestTextAsset2}">
                                                <StackPanel Orientation="Horizontal" DataContext="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}}"
                                                    d:DataContext="{d:DesignInstance assets:TestTextAsset2}">
                                                    <Label>文本 (TestTextAsset2):</Label>
                                                    <Label Content="{Binding Data}"></Label>
                                                </StackPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Converter={StaticResource getTypeConverter}}" Value="{x:Type assets:LazyImageAsset}">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type assets:LazyImageAsset}">
                                                <StackPanel Orientation="Horizontal" DataContext="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}}"
                                                    d:DataContext="{d:DesignInstance assets:LazyImageAsset}">
                                                    <Label>懒加载图片 (LazyImageAsset):</Label>
                                                    <Label Content="{Binding Asset.Image, Converter={StaticResource isNullConverter}}"></Label>
                                                    <Image Source="{Binding Asset.Image}"></Image>
                                                </StackPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Converter={StaticResource getTypeConverter}}" Value="{x:Type coreBase:LazyFileAsset}">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type assets:TestTextAsset2}">
                                                <StackPanel Orientation="Vertical" DataContext="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}}"
                                                            d:DataContext="{d:DesignInstance coreBase:LazyFileAsset}" Margin="8, 2">
                                                    <Label>文件懒加载资源 (LazyFileAsset):</Label>
                                                    <Separator Background="LightGray"/>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Label>资源是否为 null</Label>
                                                        <Label Content="{Binding Asset, Converter={StaticResource isNullConverter}}"></Label>
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Label>资源类型</Label>
                                                        <Label Content="{Binding Asset, Converter={StaticResource getTypeConverter}}"></Label>
                                                    </StackPanel>
                                                    <ContentControl DataContext="{Binding Asset}" HorizontalAlignment="Left">
                                                        <ContentControl.Style>
                                                            <Style TargetType="ContentControl">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Converter={StaticResource getTypeConverter}}" Value="{x:Type assets:TestTextAsset2}">
                                                                        <Setter Property="Content">
                                                                            <Setter.Value>
                                                                                <Label d:DataContext="{d:DesignInstance assets:TestTextAsset2}" Content="{Binding Data}"></Label>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Converter={StaticResource getTypeConverter}}" Value="{x:Type assets:ImageAsset}">
                                                                        <Setter Property="Content">
                                                                            <Setter.Value>
                                                                                <Border BorderThickness="1" BorderBrush="Black">
                                                                                    <Image d:DataContext="{d:DesignInstance assets:ImageAsset}" Source="{Binding Image}"></Image>
                                                                                </Border>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ContentControl.Style>
                                                    </ContentControl>
                                                    <Separator Background="LightGray"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
                <Separator/>
            </StackPanel>
        </DataTemplate>


        <Style x:Key="ManifestItemsShower" TargetType="ListView">
            <Setter Property="ItemTemplate" Value="{StaticResource ManifestItemsTemplate}"></Setter>
        </Style>
    </Page.Resources>

    <ScrollViewer>
        <StackPanel Orientation="Vertical">

            <StackPanel x:Name="CreateText" Orientation="Vertical">
                <Separator/>
                <Label FontSize="20" FontWeight="Bold">生成 V1 版本的清单文件用于测试</Label>

                <StackPanel Orientation="Horizontal">
                    <Label>测试文件路径:</Label>
                    <TextBox Width="200" Text="{Binding FileName}"></TextBox>
                </StackPanel>

                <Separator Margin="20, 3"/>
                <Label>清单内容</Label>
                <ListView MinHeight="50" Margin="8, 4" ItemsSource="{Binding ManifestItems}"
                          HorizontalContentAlignment="Stretch"
                          Style="{StaticResource ManifestItemsShower}">
                </ListView>


                <StackPanel Orientation="Horizontal" Margin="8, 4">
                    <Button Command="{Binding ClearCommand}">清空</Button>
                    <Button Command="{Binding RandomTestText1Command}">+ 随机测试资源 1</Button>
                    <Button Command="{Binding RandomTestText2Command}">+ 随机测试资源 2</Button>
                    <Button Command="{Binding RandomTestText3Command}">+ 随机测试资源 3</Button>
                    <Button Command="{Binding RandomTestText4Command}">+ 随机测试资源 4</Button>
                    <Button Command="{Binding AddImageCommand}">+ 添加图片</Button>
                </StackPanel>

                <Separator Margin="20, 3"/>
                
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding CreateFileCommand}">创建文件测试</Button>
                </StackPanel>

                <StackPanel Orientation="Vertical" Margin="20, 0"
                            Visibility="{Binding IsCreateFileException, Converter={StaticResource boolToVisibilityConverter}}">
                    <Separator/>
                        <Label>创建文件异常</Label>
                        <Label Content="{Binding CreateFileException}"></Label>
                    <Separator/>
                </StackPanel>
                
                <Separator/>


            </StackPanel>

            <StackPanel x:Name="ReadHead" Orientation="Vertical">
                <Separator/>
                <Label FontSize="20" FontWeight="Bold">测试读取清单文件</Label>
                
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding ReadFileCommand}">读取文件文本</Button>
                </StackPanel>


                <StackPanel Orientation="Vertical" Margin="20, 0"
                            Visibility="{Binding IsReadFileException, Converter={StaticResource boolToVisibilityConverter}}">
                    <Separator/>
                    <Label>读取文文件异常</Label>
                    <Label Content="{Binding ReadFileException}"></Label>
                    <Separator/>
                </StackPanel>

                <StackPanel Orientation="Vertical" Margin="20, 0">
                    <Separator/>
                    <Label>清单头:</Label>
                    <Label Content="{Binding ManifestFileHeadText}"></Label>
                    <Separator/>
                </StackPanel>
                
                <StackPanel Orientation="Vertical" Margin="20, 0">
                    <Separator/>
                    <Label>清单区域原文:</Label>
                    <Label Content="{Binding FullManifestText}"></Label>
                    <Separator/>
                </StackPanel>

                <StackPanel Orientation="Vertical" Margin="20, 0">
                    <Separator/>
                    <Label>读取为清单, 结果:</Label>
                    <Label>
                        <TextBlock Text="{Binding ReadResult}" TextWrapping="Wrap"></TextBlock>
                    </Label>
                    <Separator/>
                </StackPanel>

                <Separator Margin="8, 2"/>


                <StackPanel Orientation="Vertical" Margin="20, 0">
                    <Separator/>
                    <Label>读取得到的清单项</Label>
                    <ListView MinHeight="50" Margin="8, 4" ItemsSource="{Binding ReadManifestItems}"
                          HorizontalContentAlignment="Stretch"
                          Style="{StaticResource ManifestItemsShower}">
                    </ListView>

                    <Separator/>
                </StackPanel>

                <Separator Margin="8, 2"/>
                
                <!--<StackPanel Orientation="Vertical" Visibility="{Binding Head.IsSuccess, Converter={StaticResource boolToVisibilityConverter}}" Margin="20">
                    <Separator/>
                    <Label FontSize="14" FontWeight="Bold">读取成功</Label>
                    <Separator/>

                    <StackPanel Orientation="Horizontal">
                        <Label>成功信息:</Label>
                        <Label Content="{Binding Head.SuccessInfo}"></Label>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label>数据:</Label>
                        <Label Content="{Binding HeadData}"></Label>
                    </StackPanel>

                    <Separator/>
                </StackPanel>

                <StackPanel Orientation="Vertical" Visibility="{Binding Head.IsFailure, Converter={StaticResource boolToVisibilityConverter}}" Margin="20">
                    <Separator/>
                    <Label FontSize="14" FontWeight="Bold">读取失败</Label>
                    <Separator/>

                    <StackPanel Orientation="Horizontal">
                        <Label>失败信息:</Label>
                        <Label Content="{Binding Head.FailureReason}"></Label>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Visibility="{Binding Head.HasException, Converter={StaticResource boolToVisibilityConverter}}">
                        <Label>异常:</Label>
                        <Label Content="{Binding Head.Exception}"></Label>
                    </StackPanel>



                    <Separator/>
                </StackPanel>-->

            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</Page>
