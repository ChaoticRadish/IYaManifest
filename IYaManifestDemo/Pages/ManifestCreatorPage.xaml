<Page x:Class="IYaManifestDemo.Pages.ManifestCreatorPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:IYaManifestDemo.Pages"
      xmlns:commonFG="clr-namespace:Common_Wpf.Controls.FeatureGroup;assembly=Common_Wpf"
      xmlns:layouts="clr-namespace:Common_Wpf.Controls.LayoutPanel;assembly=Common_Wpf"
      xmlns:converter="clr-namespace:Common_Wpf.Converter;assembly=Common_Wpf"
      xmlns:iyaConverter="clr-namespace:IYaManifest.Wpf.Converter;assembly=IYaManifest.Wpf"
      xmlns:viewModel="clr-namespace:IYaManifestDemo.ViewModel"
      xmlns:coreEnum="clr-namespace:IYaManifest.Enums;assembly=IYaManifest.Base"
      xmlns:coreBase="clr-namespace:IYaManifest.Core.Base;assembly=IYaManifest"
      xmlns:coreInterfaces="clr-namespace:IYaManifest.Interfaces;assembly=IYaManifest.Base"
      xmlns:demoAssets="clr-namespace:IYaManifestDemo.Assets"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="800"
      Title="ManifestCreatorPage"
      d:DataContext="{d:DesignInstance viewModel:ManifestCreatorPageViewModel}">

    <Page.Resources>
        <converter:IsNullConverter x:Key="isNullConverter"/>
        <converter:InverseBooleanConverter x:Key="inverseBoolConverter"/>
        <converter:GetTypeConverter x:Key="getTypeConverter"/>
        <converter:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <converter:NullToVisibilityConverter x:Key="nullToVisibilityConverter"/>
        <converter:ByteArrayToHexStringConverter x:Key="byteArrToHexStrConverter"/>
        <converter:StringToNumberConverter x:Key="stringToNumberConverter"/>

        <Style x:Key="OperationArea" TargetType="ContentControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <StackPanel>
                            <Separator Margin="0"/>
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                            <Separator Margin="0"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="OperationButton" TargetType="Button">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="4, 2"/>
        </Style>


        <Style x:Key="TitleLabel" TargetType="Label">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Margin="4, 2">
                            <Separator/>
                            <Label Content="{TemplateBinding Content}" Padding="8, 4, 64, 4"/>
                            <Separator/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SubTitleLabel" TargetType="Label">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Margin="16, 1">
                            <Separator/>
                            <Label Content="{TemplateBinding Content}" Padding="8, 0, 32, 0"/>
                            <Separator/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="InputRow" TargetType="ContentControl">
            <Setter Property="Margin" Value="8, 2"/>
        </Style>

        <Style x:Key="KeyLabel" TargetType="Label">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="120"></Setter>
            <Setter Property="Padding" Value="4, 2, 16, 2"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>


        <Style x:Key="ItemList" TargetType="ListBox">
            <Setter Property="Margin" Value="4, 2"></Setter>
            <Setter Property="MinHeight" Value="80"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <Style x:Key="ItemTree" TargetType="TreeView">
            <Setter Property="Margin" Value="4, 2"></Setter>
            <Setter Property="MinHeight" Value="80"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <Style x:Key="ListItemArea" TargetType="ContentControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <StackPanel>
                            <Separator Margin="0"/>
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                            <Separator Margin="0"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="KeyValueLine" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal"></Setter>
        </Style>
        <Style x:Key="LineKey" TargetType="Label">
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="MinWidth" Value="80"></Setter>
            <Setter Property="VerticalAlignment" Value="Top"></Setter>
        </Style>
        
        <Style x:Key="DetailButton" TargetType="Button">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="4, 2"/>
        </Style>

        <Style x:Key="NewManifestItemSeparator" TargetType="Separator">
            <Setter Property="Margin" Value="16, 2"/>
        </Style>
        
        <Style x:Key="NewManifestItemDataEditArea" TargetType="ContentControl">
            <Setter Property="Margin" Value="20, 4"/>

            <!-- 默认情况: 已选择资源类型, 已取得映射的资源类, 且不是写死的资源类 -->
            <Setter Property="Content">
                <Setter.Value>
                    <StackPanel Orientation="Vertical">
                        <Button Command="{Binding OpenAssetCreatorPageCommand}">创建资源</Button>

                        <ContentControl Visibility="{Binding PageCreateAsset, Converter={StaticResource nullToVisibilityConverter}}">
                            <StackPanel Orientation="Vertical">
                                <Separator/>
                                <ContentControl Style="{StaticResource InputRow}">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Style="{StaticResource KeyLabel}">资源实例</Label>
                                        <Label Content="{Binding PageCreateAsset, Converter={StaticResource getTypeConverter}}"></Label>
                                    </StackPanel>
                                </ContentControl>
                                <ContentControl Style="{StaticResource InputRow}" Visibility="{Binding DataPreviewString, Converter={StaticResource nullToVisibilityConverter}}">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="{Binding DataPreviewString}"></Label>
                                    </StackPanel>
                                </ContentControl>
                                <Separator/>
                            </StackPanel>
                        </ContentControl>
                    </StackPanel>
                </Setter.Value>
            </Setter>
            
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasSelectedType}" Value="False">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Label>未选择资源类型</Label>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding HasSelectedType}" Value="True"></Condition>
                        <Condition Binding="{Binding HasMappingAssetClass}" Value="False"></Condition>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Content">
                            <Setter.Value>
                                <StackPanel Orientation="Vertical">
                                    <Label>未能取得资源类型映射的资源类</Label>
                                </StackPanel>
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <DataTrigger Binding="{Binding MappingAssetClass}" Value="{x:Type demoAssets:TestTextAsset1}">
                    <Setter Property="Content">
                        <Setter.Value>
                            <StackPanel d:DataContext="{d:DesignInstance viewModel:ManifestCreatorPageViewModel}" Orientation="Vertical">
                                <Label FontWeight="Bold">Test Text Asset 1</Label>

                                <ContentControl Style="{StaticResource InputRow}">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Style="{StaticResource KeyLabel}">Data</Label>
                                        <TextBox Width="250" Text="{Binding TextAssetStringInput}"></TextBox>
                                    </StackPanel>
                                </ContentControl>
                                
                            </StackPanel>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding MappingAssetClass}" Value="{x:Type demoAssets:TestTextAsset2}">
                    <Setter Property="Content">
                        <Setter.Value>
                            <StackPanel d:DataContext="{d:DesignInstance viewModel:ManifestCreatorPageViewModel}" Orientation="Vertical">
                                <Label FontWeight="Bold">Test Text Asset 2</Label>

                                <ContentControl Style="{StaticResource InputRow}">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Style="{StaticResource KeyLabel}">Data</Label>
                                        <TextBox Width="250" Text="{Binding TextAssetStringInput}"></TextBox>
                                    </StackPanel>
                                </ContentControl>
                            </StackPanel>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding MappingAssetClass}" Value="{x:Type demoAssets:ImageAsset}">
                    <Setter Property="Content">
                        <Setter.Value>
                            <StackPanel d:DataContext="{d:DesignInstance viewModel:ManifestCreatorPageViewModel}" Orientation="Vertical">
                                <Label FontWeight="Bold">Image Asset</Label>

                                <ContentControl Style="{StaticResource InputRow}">
                                    <StackPanel Orientation="Vertical">
                                        <StackPanel Orientation="Horizontal">
                                            <Button Margin="4, 2" Padding="4, 2" Command="{Binding ImageAssetSelectImageFile}">选择图片文件</Button>
                                            <Label Content="{Binding ImageAssetFileName}"></Label>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Visibility="{Binding ImageAsset, Converter={StaticResource nullToVisibilityConverter}}">
                                            <Label Style="{StaticResource KeyLabel}">对应临时文件</Label>
                                            <Label Content="{Binding ImageAsset.TempFile.Path}"></Label>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Visibility="{Binding ImageAsset, Converter={StaticResource nullToVisibilityConverter}}">
                                            <Label Style="{StaticResource KeyLabel}">BitmapSource is null ?</Label>
                                            <Label Content="{Binding ImageAsset.Image, Converter={StaticResource isNullConverter}}"></Label>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Visibility="{Binding ImageAsset, Converter={StaticResource nullToVisibilityConverter}}">
                                            <Label Style="{StaticResource KeyLabel}">BitmapDecoder Type</Label>
                                            <Label Content="{Binding ImageAsset.BitmapDecoder, Converter={StaticResource getTypeConverter}}"></Label>
                                        </StackPanel>
                                        <Border BorderBrush="#88000000" BorderThickness="0.75" Visibility="{Binding ImageAsset.Image, Converter={StaticResource nullToVisibilityConverter}}">
                                            <Image Source="{Binding ImageAsset.Image}" MaxHeight="350"></Image>
                                        </Border>
                                    </StackPanel>
                                </ContentControl>

                            </StackPanel>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="NewManifestItemDataOutsidePathInputArea" TargetType="ContentControl">
            <Setter Property="Visibility" Value="Collapsed"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding StorageMode}" Value="Outside">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                    <Setter Property="Content">
                        <Setter.Value>
                            <StackPanel Orientation="Vertical">
                                <ContentControl Style="{StaticResource InputRow}">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Style="{StaticResource KeyLabel}">外部相对路径</Label>
                                        <TextBox Width="300" Text="{Binding OutsidePathInput}"></TextBox>
                                    </StackPanel>
                                </ContentControl>
                                <ContentControl Style="{StaticResource InputRow}" Visibility="{Binding OutsidePathError, Converter={StaticResource boolToVisibilityConverter}}">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Style="{StaticResource KeyLabel}"></Label>
                                        <Label Content="{Binding OutsidePathCheck}" FontSize="10" FontWeight="Bold"></Label>
                                    </StackPanel>
                                </ContentControl>
                            </StackPanel>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="NewManifestItemDataMd5InputArea" TargetType="ContentControl">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Md5Setting}" Value="Empty">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Md5Setting}" Value="Fixed">
                    <Setter Property="Content">
                        <Setter.Value>
                            <StackPanel Orientation="Vertical">
                                <ContentControl Style="{StaticResource InputRow}">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Style="{StaticResource KeyLabel}">固定值</Label>
                                        <TextBox Width="300" Text="{Binding FixedMd5Input, Converter={StaticResource byteArrToHexStrConverter}}" IsReadOnly="False"></TextBox>
                                    </StackPanel>
                                </ContentControl>
                            </StackPanel>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Md5Setting}" Value="Auto">
                    <Setter Property="Content">
                        <Setter.Value>
                            <StackPanel Orientation="Vertical">
                                <ContentControl Style="{StaticResource InputRow}">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Style="{StaticResource KeyLabel}">预览值</Label>
                                        <TextBox Width="300" Text="{Binding AutoMd5, Converter={StaticResource byteArrToHexStrConverter}}" IsReadOnly="True"></TextBox>
                                        <Button Margin="4, 0" Padding="4, 0" Command="{Binding CreateMd5ValueCommand}">生成预览</Button>
                                    </StackPanel>
                                </ContentControl>
                            </StackPanel>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <ContextMenu x:Key="TreeItemContextMenu">
            <MenuItem Header="编辑" FontWeight="Bold" Visibility="{Binding NodeValue.AllowEdit, Converter={StaticResource boolToVisibilityConverter}}"
                      Command="{Binding PlacementTarget.Tag.ItemEditCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" 
                      CommandParameter="{Binding NodeValue}"></MenuItem>
            <MenuItem Header="移除" 
                      Command="{Binding PlacementTarget.Tag.RemoveTreeNodeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" 
                      CommandParameter="{Binding NodeValue}"></MenuItem>
        </ContextMenu>
        
    </Page.Resources>
    
    <layouts:RetractableContainer RetractableAreaLocation="Right"
                                  RetractableAreaWidth="250">
        <layouts:RetractableContainer.RetractableAreaContent>
            <ContentControl>
                <commonFG:SimpleLogShower x:Name="LogShower" TextWrapping="Wrap" Width="250"></commonFG:SimpleLogShower>
            </ContentControl>
        </layouts:RetractableContainer.RetractableAreaContent>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer Grid.Row="0">
                <StackPanel Orientation="Vertical">

                    <Label Style="{StaticResource TitleLabel}">文件头</Label>

                    <ContentControl Style="{StaticResource InputRow}">
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                                <Label Style="{StaticResource KeyLabel}">清单版本 (Version)</Label>
                                <Label>固定为 1</Label>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Style="{StaticResource KeyLabel}">应用标记 (AppMark)</Label>
                                <TextBox Width="120" Text="{Binding AppMark, Converter={StaticResource stringToNumberConverter}}"></TextBox>
                            </StackPanel>
                        </StackPanel>
                    </ContentControl>
                    
    
                    <Separator/>

                    <Label Style="{StaticResource TitleLabel}">清单头</Label>

                    <ContentControl Style="{StaticResource InputRow}">
                        <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource KeyLabel}">清单名 (Name)</Label>
                            <TextBox Width="120" Text="{Binding Name}"></TextBox>
                        </StackPanel>
                    </ContentControl>
                    <ContentControl Style="{StaticResource InputRow}">
                        <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource KeyLabel}">包名 (Package)</Label>
                            <TextBox Width="120" Text="{Binding Package}"></TextBox>
                        </StackPanel>
                    </ContentControl>
                    <ContentControl Style="{StaticResource InputRow}">
                        <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource KeyLabel}">备注 (Remark)</Label>
                            <TextBox Width="300" Text="{Binding Remark}"></TextBox>
                        </StackPanel>
                    </ContentControl>
                    <ContentControl Style="{StaticResource InputRow}">
                        <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource KeyLabel}">版本号 (Version)</Label>
                            <TextBox Width="120" Text="{Binding Version}"></TextBox>
                        </StackPanel>
                    </ContentControl>

                    <Label Style="{StaticResource TitleLabel}">清单项</Label>

                    
                    
                    <Label Style="{StaticResource SubTitleLabel}">新增清单项</Label>

                    <Separator Style="{StaticResource NewManifestItemSeparator}"/>
                    
                    <ContentControl Style="{StaticResource InputRow}">
                        <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource KeyLabel}">资源类型</Label>
                            <ComboBox Width="200" ItemsSource="{Binding AssetTypes}" SelectedItem="{Binding SelectedType}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="{Binding}" Padding="4, 2"></Label>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <Button Padding="4, 2" Margin="4, 0" Command="{Binding UpdateAssetTypesCommand}">刷新可选项</Button>
                        </StackPanel>
                    </ContentControl>
                    
                    <ContentControl Style="{StaticResource InputRow}">
                        <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource KeyLabel}">映射资源类</Label>
                            <Label Content="{Binding MappingAssetClass}"></Label>
                        </StackPanel>
                    </ContentControl>

                    <ContentControl Style="{StaticResource InputRow}">
                        <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource KeyLabel}">资源 ID</Label>
                            <TextBox Width="200" Text="{Binding AssetCodeSpace}"></TextBox>
                            <Label>:</Label>
                            <TextBox Width="120" Text="{Binding AssetCodeKey}"></TextBox>
                        </StackPanel>
                    </ContentControl>

                    <ContentControl Style="{StaticResource InputRow}">
                        <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource KeyLabel}">资源编码</Label>
                            <Label Content="{Binding AssetCodeString, Mode=OneWay}"></Label>
                        </StackPanel>
                    </ContentControl>

                    <ContentControl Style="{StaticResource InputRow}">
                        <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource KeyLabel}">存储方式</Label>
                            <ComboBox Width="120" ItemsSource="{Binding StorageModeOptions}" SelectedItem="{Binding StorageMode}">
                            </ComboBox>
                        </StackPanel>
                    </ContentControl>

                    <ContentControl Style="{StaticResource NewManifestItemDataOutsidePathInputArea}"></ContentControl>

                    <ContentControl Style="{StaticResource InputRow}">
                        <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource KeyLabel}">资源备注</Label>
                            <TextBox Width="300" Text="{Binding ItemRemark}"></TextBox>
                        </StackPanel>
                    </ContentControl>

                    <!-- 新清单项内容输入区域 -->
                    <Separator Style="{StaticResource NewManifestItemSeparator}"/>
                    
                    <ContentControl Visibility="{Binding HasSelectedType, Converter={StaticResource boolToVisibilityConverter}}" Style="{StaticResource NewManifestItemDataEditArea}"></ContentControl>

                    <Separator Style="{StaticResource NewManifestItemSeparator}"/>

                    <ContentControl Style="{StaticResource InputRow}">
                        <StackPanel Orientation="Horizontal">
                            <Label Style="{StaticResource KeyLabel}">MD5 值设定模式</Label>
                            <ComboBox Width="120" ItemsSource="{Binding Md5SettingOptions}" SelectedItem="{Binding Md5Setting}">
                            </ComboBox>
                        </StackPanel>
                    </ContentControl>

                    <ContentControl Style="{StaticResource NewManifestItemDataMd5InputArea}"></ContentControl>


                    <ContentControl Grid.Row="1" Style="{StaticResource OperationArea}" Margin="8, 2">
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource OperationButton}" Command="{Binding AddCurrentInputToList}">添加到列表</Button>
                        </StackPanel>
                    </ContentControl>


                    <Label Style="{StaticResource SubTitleLabel}">当前所有清单项</Label>


                    <TreeView ItemsSource="{Binding ShowingTopLayerNodes}" DataContext="{Binding}" Style="{StaticResource ItemTree}" 
                              PreviewMouseWheel="TreeView_PreviewMouseWheel">
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Childrens}">
                                <Grid Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                                      ContextMenu="{StaticResource TreeItemContextMenu}"
                                      Background="Transparent">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Separator Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"></Separator>

                                    <StackPanel Grid.Column="0" Grid.Row="1">
                                        <StackPanel Style="{StaticResource KeyValueLine}" Visibility="{Binding NodeValue.HasRelateItem, Converter={StaticResource boolToVisibilityConverter}}">
                                            <Label Style="{StaticResource LineKey}">资源ID</Label>
                                            <Label Content="{Binding NodeValue.Code}"></Label>
                                        </StackPanel>

                                        <StackPanel Style="{StaticResource KeyValueLine}" Visibility="{Binding NodeValue.NotHasRelateItem, Converter={StaticResource boolToVisibilityConverter}}">
                                            <Label Content="{Binding NodeValue.Code}"></Label>
                                        </StackPanel>

                                        <StackPanel Style="{StaticResource KeyValueLine}" Visibility="{Binding NodeValue.HasRelateItem, Converter={StaticResource boolToVisibilityConverter}}">
                                            <Label Style="{StaticResource LineKey}">简述</Label>
                                            <Label Content="{Binding NodeValue.RelateItem.Brief}"></Label>
                                        </StackPanel>

                                        <StackPanel Style="{StaticResource KeyValueLine}" Visibility="{Binding NodeValue.HasRelateItem, Converter={StaticResource boolToVisibilityConverter}}">
                                            <Label Style="{StaticResource LineKey}">资源引用类型</Label>
                                            <Label Content="{Binding NodeValue.RelateItem.AssetReference, Converter={StaticResource getTypeConverter}}"></Label>
                                        </StackPanel>


                                    </StackPanel>

                                    <Button Grid.Column="1" Grid.Row="1" Style="{StaticResource DetailButton}" Visibility="{Binding NodeValue.HasRelateItem, Converter={StaticResource boolToVisibilityConverter}}"
                                                Command="{Binding DataContext.ItemDetailCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeView}}}"
                                                CommandParameter="{Binding NodeValue}">详情</Button>

                                    <Separator Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2"></Separator>

                                </Grid>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>

                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                            <Grid Background="{Binding NodeValue.Background}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="1*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <StackPanel Orientation="Horizontal" Grid.Column="0">
                                                    <ToggleButton x:Name="Expander" Content="{Binding NodeValue.HeadStr}" ClickMode="Press" 
                                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <Label x:Name="HeadShower" Content="{Binding NodeValue.HeadStr}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    </Label>
                                                </StackPanel>
                                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                                        Background="{TemplateBinding Background}" 
                                                        Grid.Column="1"
                                                        Padding="{TemplateBinding Padding}" 
                                                        SnapsToDevicePixels="true">
                                                    <ContentPresenter ContentSource="Header" 
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Border>
                                                <ItemsPresenter x:Name="ItemHost" Grid.Column="1" Grid.Row="1"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsExpanded" Value="True">
                                                    <Setter TargetName="ItemHost" Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsExpanded" Value="False">
                                                    <Setter TargetName="ItemHost" Property="Visibility" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="HasItems" Value="false">
                                                    <Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
                                                    <Setter Property="Visibility" TargetName="HeadShower" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="HasItems" Value="true">
                                                    <Setter Property="Visibility" TargetName="Expander" Value="Visible"/>
                                                    <Setter Property="Visibility" TargetName="HeadShower" Value="Collapsed"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TreeView.ItemContainerStyle>

                    </TreeView>

                    <!--<ListBox ItemsSource="{Binding ManifestItems}" Style="{StaticResource ItemList}" d:ItemsSource="{d:SampleData ItemCount=10}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Style="{StaticResource ListItemArea}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Grid.Column="0">
                                            <StackPanel Style="{StaticResource KeyValueLine}">
                                                <Label Style="{StaticResource LineKey}">资源ID</Label>
                                                <Label Content="{Binding AssetId}"></Label>
                                            </StackPanel>

                                            <StackPanel Style="{StaticResource KeyValueLine}">
                                                <Label Style="{StaticResource LineKey}">简述</Label>
                                                <Label Content="{Binding Brief}"></Label>
                                            </StackPanel>

                                            <StackPanel Style="{StaticResource KeyValueLine}">
                                                <Label Style="{StaticResource LineKey}">资源引用类型</Label>
                                                <Label Content="{Binding AssetReference, Converter={StaticResource getTypeConverter}}"></Label>
                                            </StackPanel>


                                        </StackPanel>

                                        <Button Grid.Column="1" Style="{StaticResource DetailButton}" 
                                                Command="{Binding DataContext.ItemDetailCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}"
                                                CommandParameter="{Binding}">详情</Button>

                                    </Grid>
                                </ContentControl>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>-->

                </StackPanel>
            </ScrollViewer>

            <ContentControl Grid.Row="1" Style="{StaticResource OperationArea}">
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource OperationButton}" Command="{Binding OpenManifestCommand}">打开清单</Button>
                    <Button Style="{StaticResource OperationButton}" Command="{Binding ResetCommand}">重置输入</Button>
                    <Button Style="{StaticResource OperationButton}" Command="{Binding CreateFileCommand}">保存清单文件</Button>
                </StackPanel>
            </ContentControl>
            
        </Grid>

    </layouts:RetractableContainer>
</Page>
